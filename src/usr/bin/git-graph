#!/bin/bash

applySettings() {
	i_tag_color=${i_tag_color:-$tag_color}
	i_tag_shape=${i_tag_shape:-$tag_shape}
	i_tag_font=${i_tag_font:-$tag_font}
	i_tag_enabled=${i_tag_enabled:-$tag_enabled}
	i_tag_style=${i_tag_style:-$tag_style}
	i_tag_arrowhead=${i_tag_arrowhead:-$tag_arrowhead}

	i_head_color=${i_head_color:-$head_color}
	i_head_shape=${i_head_shape:-$head_shape}
	i_head_font=${i_head_font:-$head_font}
	i_head_enabled=${i_head_enabled:-$head_enabled}
	i_head_style=${i_head_style:-$head_style}
	i_head_arrowhead=${i_head_arrowhead:-$head_arrowhead}

	i_remote_color=${i_remote_color:-$remote_color}
	i_remote_shape=${i_remote_shape:-$remote_shape}
	i_remote_font=${i_remote_font:-$remote_font}
	i_remote_enabled=${i_remote_enabled:-$remote_enabled}
	i_remote_style=${i_remote_style:-$remote_style}
	i_remote_arrowhead=${i_remote_arrowhead:-$remote_arrowhead}
	i_remote_trim=${i_remote_trim:-$remote_trim}

	i_label_color=${i_label_color:-$label_color}
	i_label_shape=${i_label_shape:-$label_shape}
	i_label_font=${i_label_font:-$label_font}
	i_label_enabled=${i_label_enabled:-$label_enabled}
	i_label_style=${i_label_style:-$label_style}
	i_label_arrowhead=${i_label_arrowhead:-$label_arrowhead}
	i_label_include_author=${i_label_include_author:-$label_include_author}

	i_commit_color=${i_commit_color:-$commit_color}
	i_commit_shape=${i_commit_shape:-$commit_shape}
	i_commit_font=${i_commit_font:-$commit_font}
	i_commit_style=${i_commit_style:-$commit_style}
	i_commit_arrowhead=${i_commit_arrowhead:-$commit_arrowhead}

        i_precommit_color=${i_precommit_color:-$precommit_color}
        i_precommit_shape=${i_precommit_shape:-$precommit_shape}
        i_precommit_font=${i_precommit_font:-$precommit_font}
        i_precommit_style=${i_precommit_style:-$precommit_style}
}

i_tag_constraint=false
i_head_constraint=false
i_remote_constraint=false
i_label_constraint=true
i_commit_constraint=true

edge() {
	type=$1
	eval echo "\" edge [color=\\\"\${i_${type}_color}\\\" style=\\\"\${i_${type}_style}\\\" arrowhead=\\\"\${i_${type}_arrowhead}\\\" constraint=\\\"\${i_${type}_constraint}\\\"]\""
}

node() {
	type=$1
        eval echo "\" node [shape=\\\"\${i_${type}_shape}\\\" style=\\\"\${i_${type}_style}\\\" fontname=\\\"\${i_${type}_font}\\\" fontcolor=\\\"\${i_${type}_color}\\\" color=\\\"\${i_${type}_color}\\\"]\""
}

rel() {
	type=$1
	if [[ "0" != $(eval echo "\${i_${type}_enabled}") ]]; then
		edge $type
		eval echo -e "\"\${rel_${type}}\""
	fi
}

#Environment settings
applySettings

#User defined settings
[ -a ~/.git-graph ] && source ~/.git-graph
applySettings

#Global settings
source /etc/git-graph
applySettings

#Generation code
parseRefs() {
	for ref in $2; do
		ref=${ref%)}
                ref=${ref%,}
                ref=${ref#(}
                ref=${ref#refs/}
		if [[ $ref == $1/* ]] && ! [[ $ref == $1/*/HEAD ]]; then
			echo -n "${ref#$1/} "
		fi
	done
}

rel_label=""
rel_tag=""
rel_head=""
rel_remote=""
rel_parents=""
IFS=$'\n'
for line in $(git log --decorate=full --pretty="format:%h	%f	%aN	 %d 	 %p " "$@"); do
	IFS='	'
	
	if [[ -z "$fields" ]]; then
		echo "digraph git {"
		echo " rankdir=\"BT\""
		echo " graph[style=\"invis\"]"
	fi

	fields=($line)
	IFS=' '
	hash=${fields[0]}
	subject=${fields[1]}
	author=${fields[2]}
	tags=$(parseRefs tags "${fields[3]}")
	heads=$(parseRefs heads "${fields[3]}")
	remotes=$(parseRefs remotes "${fields[3]}")
	parents=${fields[4]}
	
	echo
	echo " subgraph \"cluster_${hash}\" {"
	node commit
        echo "  \"$hash\""

	if [[ "0" != "$i_tag_enabled" ]] && [[ -n "$tags" ]]; then
		node tag
		for tag in $tags; do
			echo "  \"$tag\""
			rel_tag="$rel_tag \"$tag\" -> \"$hash\"\n"
		done
	fi

        if [[ "0" != "$i_head_enabled" ]] && [[ -n "$heads" ]]; then
		node head
		for head in $heads; do
			echo "  \"$head\""
	                rel_head="$rel_head \"$head\" -> \"$hash\"\n"
		done
        fi

        if [[ "0" != "$i_remote_enabled" ]] && [[ -n "$remotes" ]]; then
		node remote
                for remote in $remotes; do
			remote_label=$remote
			[ "0" != "$i_remote_trim" ] && remote_label=${remote#*/}
                        echo "  \"$remote\" [label=\"$remote_label\"]"
                        rel_remote="$rel_remote \"$remote\" -> \"$hash\"\n"
                done    
        fi 

	if [[ "0" != "$i_label_enabled" ]]; then
		label=$subject
		[ "0" != "$i_label_include_author" ] && label="$subject ($author)"
		node label
		echo "  \"$hash-l\" [label=\"$label\"]"
		rel_label="$rel_label \"$hash\" -> \"$hash-l\"\n"
		echo "  {rank=same; \"$hash\"; \"$hash-l\"}"
	fi

	echo " }"

	if [[ $parents =~ ^\ +$ ]]; then
		rel_parents="$rel_parents \"$hash\" -> \"      \"\n"
	fi
	for parent in $parents; do
		rel_parents="$rel_parents \"$hash\" -> \"$parent\"\n"
	done
done

echo
rel label
rel tag
rel head
rel remote

node precommit
edge commit
echo -e "$rel_parents"

echo '}'
