#!/bin/bash
. /usr/share/gagu/ssh-nopass

usage() {
	echo 'Usage: git-clone-gerrit [-p <port>] [-m] <host> [<pattern>]'
	echo '       git-clone-gerrit -h'
	echo
	echo 'Clones one or more gerrit repositories and adds the commit-msg hook'
	echo
	echo ' host       server hostname or ip address'
	echo ' pattern    projects to clone pattern (default: .*)'
	echo '            pattern is in grep format and matched against the full project name'
	echo ' -p         server port number (default: 29418)'
	echo ' -m         update missing'
	echo '            by default an existing project causes an error (meaning no projects'
 	echo '            will be cloned), with this setting, missing projects will be'
	echo '            cloned and projects missing the commit-msg hook will have it added'
	echo ' -h         print this help message and exit'
	exit 1
}

parse-args() {
	local OPTERR=0
	local OPTIND=1
	
	port=29418
	unset update_missing
	while getopts "hup:" opt; do
		case "${opt}" in
		h|\?\|:)
			usage
			;;
		p)
			port="${OPTARG}"
			;;
		u)
			update_missing=1
			;;
		esac
	done
	
	shift $((OPTIND-1))
	if [[ $# -lt 1 || $# -gt 2 ]]; then
		usage
	fi
	host="$1"
	pattern="${2:-.*}"
}

clone-all() {
	repos=( $(ssh -p "${port}" "${host}" gerrit ls-projects | grep "^${pattern}\$") )
	unset exists
	for repo in "${repos[@]}"; do
		if [[ -e "${repo}" ]]; then
			echo "local folder already exists: ${repo}"
			exists=1
		fi
	done
	if [[ -n $exists && -z ${update_missing} ]]; then
		exit 1
	fi
		
	for repo in "${repos[@]}"; do
		clone "${repo}"
	done
}

clone() {
	echo "processing ${repo}"
	repo="$1"
	if [[ ! -e "${repo}" ]]; then
		git clone ssh://${host}:${port}/${repo};
	fi

	dest="${repo}/.git/hooks/commit-msg"
	if [[ ! -e ${dest} ]]; then
		scp -p -P "${port}" "${host}:hooks/commit-msg" "${dest}"
	fi
}

set -e
parse-args "$@"
clone-all

